package com.aesirsoftwares;

import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;


public class VulnerabilityScanner {
    
    private static final String ZAP_API_URL = "http://localhost:8081/JSON/ascan/action/"; //configurando url e port
    private static final String API_TOKEN = "q4o6kjspo42sk2h58n59go7cbp"; //token da api do owasp

    public static List<String> scanWithOWASPZAP(String url) {
        List<String> vulnerabilities = new ArrayList<>();

        try {
            String scanUrl = ZAP_API_URL + "scan/?apikey=" + API_TOKEN + "&url=" + URLEncoder.encode(url, StandardCharsets.UTF_8) + "&recurse=true";

            URL scanRequestUrl = new URL(scanUrl);
            HttpURLConnection connection = (HttpURLConnection) scanRequestUrl.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            connection.getResponseCode(); 

            Thread.sleep(5000);  //cooldown

            String resultUrl = "http://localhost:8081/JSON/ascan/view/scans/?apikey=" + API_TOKEN;
            URL resultRequestUrl = new URL(resultUrl);
            HttpURLConnection resultConnection = (HttpURLConnection) resultRequestUrl.openConnection();
            resultConnection.setRequestMethod("GET");
            resultConnection.setConnectTimeout(5000);
            resultConnection.setReadTimeout(5000);
            
            int responseCode = resultConnection.getResponseCode(); 

            if (responseCode == 200) {
                vulnerabilities.add("Escaneamento completo, resultado: Código de resposta " + responseCode);
            } else {
                vulnerabilities.add("Erro ao tentar acessar o ZAP API, Código: " + responseCode);
            }
        } catch (Exception e) {
            vulnerabilities.add("Erro ao usar o OWASP ZAP: " + e.getMessage());
        }

        return vulnerabilities;
    }
}