package com.aesirsoftwares;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

public class VulnerabilityScanner {

    private static final String ZAP_API_URL = "http://localhost:8080/JSON/ascan/action/";
    private static final String API_TOKEN = "q4o6kjspo42sk2h58n59go7cbp";

    // Método para escanear vulnerabilidades com OWASP ZAP
    public static List<String> scanWithOWASPZAP(String url) {
        List<String> vulnerabilities = new ArrayList<>();

        try {
            // Envia o pedido para iniciar o escaneamento
            String scanUrl = ZAP_API_URL + "scan/?apikey=" + API_TOKEN + "&url=" + URLEncoder.encode(url, StandardCharsets.UTF_8) + "&recurse=true";
            HttpURLConnection connection = (HttpURLConnection) new URL(scanUrl).openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            connection.getResponseCode();  // Dispara a requisição

            // Aguarda o tempo necessário para o escaneamento ser completado
            Thread.sleep(5000); // Ajuste esse tempo conforme necessário

            // Verifica o status do escaneamento após o tempo de espera
            String resultUrl = "http://localhost:8080/JSON/ascan/view/scans/?apikey=" + API_TOKEN;
            HttpURLConnection resultConnection = (HttpURLConnection) new URL(resultUrl).openConnection();
            resultConnection.setRequestMethod("GET");
            resultConnection.setConnectTimeout(5000);
            resultConnection.setReadTimeout(5000);

            // Lê a resposta do escaneamento
            BufferedReader in = new BufferedReader(new InputStreamReader(resultConnection.getInputStream()));
            String inputLine;
            StringBuilder response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            // Aqui você pode processar a resposta JSON para capturar as vulnerabilidades
            // Caso o ZAP retorne algum alerta
            String jsonResponse = response.toString();
            if (jsonResponse.contains("vulnerabilities")) {
                vulnerabilities.add("Vulnerabilidades encontradas: " + jsonResponse);
            } else {
                vulnerabilities.add("Nenhuma vulnerabilidade encontrada.");
            }

        } catch (Exception e) {
            vulnerabilities.add("Erro ao usar o OWASP ZAP: " + e.getMessage());
        }

        return vulnerabilities;
    }
}
